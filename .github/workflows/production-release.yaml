name: Deploy Staging

env:
  ENVIRONMENT: 'production'
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_TAG: 'latest'

on:
  push:
    branches:
      - feature/production-release
  tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  workflow_dispatch:

concurrency:
  group: production-release-${{ github.ref }}-1
  cancel-in-progress: true


jobs:
  docker-build-base:
    name: Build Base Image
    runs-on: ubuntu-latest
    environment:
      name: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build staging image
        uses: ./.github/actions/build-docker-image
        with:
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          docker_image: ${{ env.IMAGE_NAME }}-base
          docker_file: "base"
          docker_tag: ${{ env.DOCKER_TAG }}

  docker-build-production:
    name: Build Latest Image
    runs-on: ubuntu-latest
    needs: docker-build-base
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build staging image
        uses: ./.github/actions/build-docker-image
        with:
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          docker_image: ${{ env.IMAGE_NAME }}
          docker_file: ${{ env.ENVIRONMENT }}
          docker_tag: ${{ env.DOCKER_TAG }}

  docker-build-tag:
    name: Build tag Image
    runs-on: ubuntu-latest
    needs: docker-build-base
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build staging image
        uses: ./.github/actions/build-docker-image
        with:
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          docker_image: ${{ env.IMAGE_NAME }}
          docker_file: ${{ env.ENVIRONMENT }}
          docker_tag: ${{github.ref_name}}
